@inject IProductManage ProductManage
@{
            <ul class="product-partial-list">
            @{
<<<<<<< HEAD
            var popularProducts = (await ProductManage.GetProductsAsync()).Where(p => p.Sold > 0).OrderByDescending(p => p.Sold).Take(5).ToList();
=======
            var popularProducts = (await ProductManage.GetProductsAsync()).Where(p => p.Sold > 0).OrderByDescending(p => p.Sold).Take(3).ToList();
>>>>>>> ca0995f49d8fcd9cfc33ae0a511771982a1630f6
                foreach (var product in popularProducts)
                {
                    <li class="product-partial-item">
                        <a href="/Product/@product.Id" class="product-partial-link">
                        <img onerror="this.src='/images/not-found.png'" src="/uploads/products/@product.ImageUrl" alt="@product.Name" class="product-partial-img">
                            <div class="product-partial-info">
                                <span class="product-partial-name">@product.Name</span>
                                @if (product.OldPrice > product.Price)
                                {
                                    <span class="product-partial-oldprice">@product.OldPrice.ToString("c0", new CultureInfo("vi-VN"))</span>
                                }
                                <span class="product-partial-price">@product.Price.ToString("c0", new CultureInfo("vi-VN"))</span>
                            </div>
                        </a>
                    </li>
                }
            }
        </ul>
}
